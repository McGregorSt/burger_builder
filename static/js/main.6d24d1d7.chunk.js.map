{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/UI/Navigation/Toolbar/Toolbar.css","components/UI/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/UI/Navigation/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/UI/Navigation/NavigationItems/NavigationItems.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","App.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/UI/Navigation/NavigationItem/NavigationItem.js","components/UI/Navigation/NavigationItems/NavigationItems.js","components/UI/Navigation/MenuItem/MenuItem.js","components/UI/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/UI/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","hoc/withErrorHandler.js","components/UI/Spinner/Spinner.js","axios-orders.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","Logo","className","classes","src","burgerLogo","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","MenuItem","onClick","open","Toolbar","this","BurgerMenuHover","BurgerMenu","DesktopOnly","Component","Backdrop","show","clicked","SideDrawer","attachedClasses","Close","Open","closed","join","Layout","state","showSideDrawer","sideDrawerToggleHandler","setState","prevState","Content","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","elm","concat","length","BuildControl","label","More","added","Less","remove","disabled","disabledInfo","controls","BuildControls","price","toFixed","ctrl","addIngredient","removeIngredient","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","totalPrice","purchaseCancelled","purchaseContinued","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","Spinner","loader","inst","create","baseURL","setIngredients","BurgerBuilder","purchasing","updatePurchaseState","acc","cur","addIngredientHandler","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onPurchaseInit","history","push","onInitIngredients","ingrd","orderSummary","burger","onIngredientAdded","onIngredientRemoved","connect","loading","order","dispatch","igType","ingredientName","get","then","resp","data","catch","CheckoutSummary","width","height","margin","checkoutCancel","checkoutContinue","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","el","displayValue","Label","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","checkValidity","rules","isValid","trim","orderHandler","event","preventDefault","formData","orderKey","orderData","onPurchaseBurgerStart","inputChangedHandler","inputId","updatedForm","updatedFormEl","target","formElementsArray","id","config","form","onSubmit","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","contactDataActions","Checkout","goBack","summary","purchasedRedirect","purchased","path","match","render","Order","amount","ingredientOutput","ig","display","border","padding","Orders","onFetchOrders","orders","fetchedOrders","err","App","component","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENTS_PRICES","salad","cheese","meat","bacon","removeIngredients","action","updatedIng","updatedIngs","addIngredients","updatedIngredient","updatedState","fetchIngredients","reducer","orderReducer","newOrder","rootReducer","combineReducers","burgerBuilder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d24d1d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2272E\",\"Logo\":\"Toolbar__Logo__3SGCu\",\"BurgerMenu\":\"Toolbar__BurgerMenu__3YXpN\",\"DesktopOnly\":\"Toolbar__DesktopOnly__1dART\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__2Xta_\",\"Open\":\"SideDrawer__Open__Ks1nk\",\"Close\":\"SideDrawer__Close__2VS9Q\",\"Logo\":\"SideDrawer__Logo__y1d4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__feEaU\",\"active\":\"NavigationItem__active__2tNM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__PB14G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner__loader__UBmsk\",\"load1\":\"Spinner__load1__3Y-9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\",\"App-logo\":\"App__App-logo__3JCPt\",\"App-logo-spin\":\"App__App-logo-spin__RvI1J\",\"App-header\":\"App__App-header__3iH8L\",\"App-link\":\"App__App-link__13fTZ\"};","const aux = (props) => props.children\r\n\r\nexport default aux","import React from 'react'\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.css'\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt='myBurger' />\r\n    </div>\r\n)\r\n\r\nexport default Logo","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport classes from './NavigationItem.css'\r\n\r\nconst NavigationItem = (props) => (\r\n      <li className={classes.NavigationItem}>\r\n          <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n      </li>\r\n  \r\n)\r\n\r\nexport default NavigationItem","import React from 'react'\r\n\r\nimport classes from './NavigationItems.css'\r\nimport NavigationItem from '../NavigationItem/NavigationItem'\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/'>Burger Builder</NavigationItem> \r\n        <NavigationItem link='/orders'>Orders</NavigationItem> \r\n    </ul>\r\n)\r\n\r\nexport default NavigationItems","import React from 'react'\r\n\r\nconst MenuItem = (props) => (\r\n  <div onClick={props.open}>\r\n      {props.children}\r\n  </div>\r\n)\r\n\r\nexport default MenuItem","import React, { Component } from 'react'\r\n\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport MenuItem from '../MenuItem/MenuItem'\r\n\r\nclass Toolbar extends Component {\r\n    // if (classes)\r\n    render() {\r\n        return (\r\n            <header className={classes.Toolbar}>\r\n                {/* <nav className={classes.DesktopOnly}> */}\r\n                    <MenuItem open={this.props.open}>\r\n                        <div className={classes.BurgerMenuHover}>\r\n                            <div className={classes.BurgerMenu}></div>\r\n                            <div className={classes.BurgerMenu}></div>\r\n                            <div className={classes.BurgerMenu}></div>\r\n                        </div>\r\n                    </MenuItem>\r\n                {/* </nav> */}\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav className={classes.DesktopOnly}>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </header>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Toolbar","import React from 'react'\r\n\r\nimport classes from './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div \r\n                    className={classes.Backdrop}\r\n                    onClick={props.clicked}\r\n                    ></div> : null   \r\n)\r\n\r\nexport default Backdrop","import React from 'react'\r\n\r\nimport Logo from '../../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.css'\r\nimport Backdrop from '../../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../../hoc/Auxiliary'\r\n\r\nconst SideDrawer = (props) => {\r\n  \r\n    let attachedClasses = [classes.SideDrawer, classes.Close]\r\n    if(props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n  \r\n  return (\r\n      <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses.join(' ')}>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems />\r\n            </nav>\r\n        </div>\r\n      </Aux>\r\n  )\r\n}\r\n\r\nexport default SideDrawer","import React, { Component } from 'react'\r\n\r\nimport Aux from '../../hoc/Auxiliary'\r\nimport classes from './Layout.css'\r\nimport Toolbar from '../UI/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../UI/Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( prevState => ({\r\n            showSideDrawer: !prevState.showSideDrawer }))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                    open={this.sideDrawerToggleHandler}/>\r\n                />\r\n                <SideDrawer \r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerToggleHandler}/>\r\n                <main className={ classes.Content } >\r\n                    { this.props.children }\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nimport classes from './BurgerIngredient.css';\r\n// import BurgerBuilder from '../../../containers/BurgerBuilder/BurgerBuilder';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n    \r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={ classes.BreadBottom }></div>;\r\n                break;\r\n            case ('bread-top'): \r\n                ingredient = (\r\n                    <div className={ classes.BreadTop }>\r\n                        <div className={ classes.Seeds1 }></div>\r\n                        <div className={ classes.Seeds2 }></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={ classes.Meat }></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={ classes.Cheese }></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={ classes.Salad }></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={ classes.Bacon }></div>;\r\n                break;\r\n            default: \r\n                ingredient = null;\r\n        }\r\n        \r\n        return ingredient\r\n    }\r\n}\r\n\r\n// BurgerBuilder.propTypes = {\r\n//     type: PropTypes.string.isRequired\r\n// }\r\n\r\nexport default BurgerIngredient","import React from 'react'\r\n// import { withRouter } from 'react-router-dom'\r\n\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={ igKey + i } type={ igKey } />\r\n            })\r\n        })\r\n        .reduce((arr, elm) => {\r\n            return arr.concat(elm)\r\n        }, [])\r\n         if(transformedIngredients.length === 0 ){\r\n            transformedIngredients = <p>Please choose some ingredients</p>\r\n         }\r\n         \r\n    return(\r\n        <div className={ classes.Burger }>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            { transformedIngredients }\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger","import React from 'react'\r\n\r\nimport classes from './BuildControl.css'\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={ classes.BuildControl }>\r\n        <div className={ classes.label }> { props.label } </div>\r\n        <button className={ classes.More } onClick={ props.added } >More</button>\r\n        <button className={ classes.Less } onClick={ props.remove } disabled={ props.disabledInfo }>Less</button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControl","import React from 'react'\r\n\r\nimport classes from './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Meat', type: 'meat' }\r\n]\r\n\r\nconst BuildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    <p>Current price: ${ props.price.toFixed(2) }</p>\r\n        { controls.map( ctrl => {\r\n            return <BuildControl \r\n                        key={ ctrl.label } \r\n                        label={ ctrl.label } \r\n                        added={ () => props.addIngredient(ctrl.type) }\r\n                        remove={ () => props.removeIngredient(ctrl.type)}\r\n                        disabledInfo={ props.disabledInfo[ctrl.type] }\r\n                        />\r\n        }\r\n        )}\r\n        <button \r\n            className={ classes.OrderButton } \r\n            disabled={ !props.purchasable }\r\n            onClick={ props.ordered }\r\n            >ORDER NOW</button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControls","import React, { Component } from 'react'\r\n\r\nimport classes from './Modal.css'\r\nimport Aux from './../../../hoc/Auxiliary'\r\nimport Backdrop from './../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate ');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                    <div \r\n                    className={ classes.Modal }\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                        {this.props.children} \r\n                    </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\n\r\nimport classes from './Button.css'\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n            >{ props.children }</button>\r\n)\r\n\r\nexport default Button","import React from 'react'\r\n\r\nimport Aux from './../../../hoc/Auxiliary'\r\nimport Button from './../../UI/Button/Button'\r\n\r\nconst OrderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return <li key={igKey} ><span style={{ textTransform: 'capitalize' }}>{ igKey }</span>: { props.ingredients[igKey] } </li>\r\n        })\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                { ingredientSummary }\r\n            </ul>\r\n            <p>Total price is: ${props.totalPrice.toFixed(2)}</p>\r\n            <p>Continue to checkout?</p>\r\n            <Button \r\n                btnType='Danger' \r\n                clicked={ props.purchaseCancelled }\r\n                >CANCEL</Button>\r\n            <Button \r\n                btnType='Success' \r\n                clicked={ props.purchaseContinued }\r\n                >CONTINUE</Button>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default OrderSummary","import React, { Component } from 'react'\r\n\r\nimport Modal from '../components/UI/Modal/Modal'\r\nimport Aux from './Auxiliary'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        \r\n        state = {\r\n            error: null\r\n        }\r\n        \r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null })\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error })\r\n            })\r\n        }\r\n        componentWillUnmount () {\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render () {\r\n            return ( \r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                        >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n  \r\n\r\nexport default withErrorHandler","import React from 'react'\r\n\r\nimport classes from './Spinner.css'\r\n\r\nconst Spinner = (props) => (\r\n  <div className={classes.loader}>\r\n      {/* Loading... */}\r\n  </div>\r\n)\r\n\r\nexport default Spinner","import axios from 'axios'\r\n\r\nconst inst = axios.create({\r\n    baseURL: 'https://react-burger-builder-mcgs.firebaseio.com/'\r\n})\r\n\r\nexport default inst","import axios from '../../axios-orders'\r\n\r\nimport * as actionTypes from '../actions/actionTypes'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.DEL_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-builder-mcgs.firebaseio.com/ingredients.json')\r\n            .then(resp => {\r\n                dispatch(setIngredients(resp.data))\r\n                console.log('anything?', resp.data)\r\n                console.log('anything?', setIngredients())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed(error))\r\n            })\r\n    }\r\n}\r\n\r\nconsole.log('go', setIngredients())","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const DEL_INGREDIENT = 'DEL_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from './../../components/UI/Modal/Modal'\r\nimport OrderSummary from './../../components/Burger/OrderSummary/OrderSummary'\r\nimport withErrorHandler from '../../hoc/withErrorHandler'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport * as actions from '../../store/actions/index'\r\nimport axios from '../../axios-orders'\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n  \r\n    state = {\r\n        purchasing: false,\r\n   \r\n    }\r\n    \r\n    componentDidMount () {\r\n        console.log('porps 2', this.props)\r\n        console.log(this.props.onInitIngredients())\r\n        this.props.onInitIngredients()\r\n    }\r\n\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((acc, cur) => {\r\n                return acc + cur\r\n            }, 0)\r\n        return sum > 0 \r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        // const oldIngredCount = this.state.ingredients[type]\r\n        // const ingredCount = oldIngredCount + 1\r\n        // const updatedIngredients = {...this.state.ingredients}\r\n        // updatedIngredients[type] = ingredCount\r\n        // const priceAddition = INGREDIENTS_PRICES[type]\r\n        // const newTotalPrice = this.state.totalPrice + priceAddition\r\n        // this.setState({ \r\n        //     ingredients: updatedIngredients, \r\n        //     totalPrice: newTotalPrice\r\n        // })\r\n        // this.updatePurchaseState(updatedIngredients)\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        // const oldIngredCount = this.state.ingredients[type]\r\n        // const ingredCount = oldIngredCount - 1\r\n        // const updatedIngredients = { ...this.state.ingredients }\r\n        \r\n        // if(oldIngredCount !== 0){\r\n        //     updatedIngredients[type] = ingredCount\r\n        // } \r\n        // const priceDiff = INGREDIENTS_PRICES[type]\r\n        // const newTotalPrice = this.state.totalPrice - priceDiff\r\n        // this.setState({\r\n        //     ingredients: updatedIngredients,\r\n        //     totalPrice: newTotalPrice\r\n        // })\r\n        // this.updatePurchaseState(updatedIngredients)\r\n        \r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ purchasing: true })\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false })\r\n    }\r\n    \r\n    purchaseContinueHandler = () => {\r\n        // alert('Please continue...')\r\n\r\n        this.props.onPurchaseInit()\r\n        this.props.history.push('/checkout')\r\n        // const queryParams = []\r\n        // for (let i in this.state.ingredients) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice)\r\n        // const queryString = queryParams.join('&')\r\n        \r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryString\r\n        // })\r\n    }\r\n    render() {\r\n        \r\n        console.log('here', this.props.ingrd)\r\n        const disabledInfo = {...this.props.ingrd}\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null\r\n        \r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\r\n        if (this.props.ingrd) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={ this.props.ingrd }/>\r\n                    <BuildControls \r\n                        addIngredient={ this.props.onIngredientAdded }\r\n                        removeIngredient={ this.props.onIngredientRemoved } \r\n                        disabledInfo={ disabledInfo }\r\n                        purchasable={ this.updatePurchaseState(this.props.ingrd) }\r\n                        price={ this.props.totalPrice }\r\n                        ordered={ this.purchaseHandler }\r\n                        /> \r\n                </Aux>\r\n            )\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    ingredients={ this.props.ingrd }\r\n                    totalPrice={ this.props.totalPrice }\r\n                    purchaseCancelled={ this.purchaseCancelHandler }\r\n                    purchaseContinued={ this.purchaseContinueHandler } \r\n                    />\r\n            )\r\n        }\r\n        // if (this.props.loading) {\r\n        //     orderSummary = <Spinner />\r\n        // }\r\n        \r\n        return(\r\n            <Aux>\r\n                <Modal show={ this.state.purchasing } modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                    {burger}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingrd: state.ingrd.ingredients,\r\n        totalPrice: state.ingrd.totalPrice,\r\n        error: state.ingrd.error,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (igType) => dispatch(actions.addIngredient(igType)),\r\n        onIngredientRemoved: (igType) => dispatch(actions.removeIngredient(igType)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onPurchaseInit: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json', orderData)\r\n            .then(resp => {\r\n                console.log(resp.data)\r\n                dispatch(purchaseBurgerSuccess(resp.data, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchedOrders = []\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                })\r\n            } \r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchOrdersFail(err))\r\n        })\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.css'\r\n\r\nconst CheckoutSummary = (props) => (\r\n  <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{width: '100%', height: '450px', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients}/>\r\n      </div>\r\n      <Button btnType='Danger' clicked={props.checkoutCancel}>Cancel</Button>\r\n      <Button btnType='Success' clicked={props.checkoutContinue}>Continue</Button>\r\n  </div>\r\n)\r\n\r\nexport default CheckoutSummary","import React from 'react'\r\n\r\nimport classes from './Input.css'\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null\r\n    const inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        console.log('invalid')\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break\r\n        case ('select'):\r\n            inputElement = <select \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                    {props.elementConfig.options.map(el => (\r\n                        <option key={el.value} value={el.value} >{el.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            break\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Input","import React, { Component } from 'react'\r\nimport axios from '../../../axios-orders'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactData.css'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport * as contactDataActions from '../../../store/actions/index'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'},\r\n                     ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: true\r\n            },\r\n            }, \r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if ( rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid \r\n        }\r\n        return isValid\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault()\r\n        this.setState({ loading: true })\r\n        const formData = {}\r\n        for (let orderKey in this.state.orderForm) {\r\n            formData[orderKey] = this.state.orderForm[orderKey].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingrd,\r\n            price: this.props.totalPrice.toFixed(2),\r\n            deliveryMethod: 'fastest',\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onPurchaseBurgerStart(order)\r\n        // axios.post('/orders.json', order)\r\n        //     .then(response => {\r\n        //         this.setState({ loading: false })\r\n        //         this.props.history.push('/')\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({ loading: false })\r\n        //     })\r\n    }\r\n\r\n    inputChangedHandler = (event, inputId) => {\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormEl = {\r\n            ...updatedForm[inputId]\r\n        }\r\n        updatedFormEl.value = event.target.value\r\n        updatedForm[inputId] = updatedFormEl\r\n        updatedFormEl.valid = this.checkValidity(updatedFormEl.value, updatedFormEl.validation)\r\n        updatedFormEl.touched = true\r\n        \r\n        let formIsValid = true;\r\n        for (let inputId in updatedForm) {\r\n            formIsValid = updatedForm[inputId].valid && formIsValid\r\n        }\r\n\r\n        this.setState({ orderForm: updatedForm, formIsValid: formIsValid })\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = []\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}> \r\n                {formElementsArray.map(elm => {\r\n                    return <Input \r\n                                key={elm.id}\r\n                                elementType={elm.config.elementType}\r\n                                elementConfig={elm.config.elementConfig}\r\n                                value={elm.config.value}\r\n                                invalid={!elm.config.valid}\r\n                                shouldValidate={elm.config.validation}\r\n                                touched={elm.config.touched}\r\n                                changed={(event) => this.inputChangedHandler(event, elm.id)}\r\n                                />\r\n                })}\r\n                \r\n                <Button btnType='Success' disabled={!this.state.formIsValid} >ORDER</Button>\r\n            </form>\r\n        )\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n     return (\r\n        <div className={classes.ContactData}>\r\n            <h4>Enter your Contact Data</h4>\r\n            { form }\r\n        </div>\r\n    )\r\n }\r\n}\r\n\r\nconst mapStateToPorops = state => {\r\n    return {\r\n        ingrd: state.ingrd.ingredients,\r\n        totalPrice: state.ingrd.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPurchaseBurgerStart: (orderData) => dispatch(contactDataActions.purchaseBurger(orderData))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPorops, mapDispatchToProps) (withErrorHandler(ContactData, axios))","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from '../Checkout/ContactData/ContactData'\r\n\r\nclass Checkout extends Component {\r\n    // state = {\r\n    //     ingredients: {\r\n    //         salad: 1,\r\n    //         bacon:1,\r\n    //         cheese: 1,\r\n    //         meat: 1\r\n    //     },\r\n    //     totalPrice: null\r\n    // }\r\n\r\n    // componentWillMount () {\r\n    //     const query = new URLSearchParams(this.props.location.search)\r\n    //     const ingredients = {}\r\n    //     let price = 0 \r\n    //     for (let param of query.entries()) {\r\n    //             if (param[0] === 'price') {\r\n    //                 price = param[1]\r\n    //             } else {\r\n    //                 ingredients[param[0]] = +param[1]\r\n    //             }\r\n    //         }\r\n    //     this.setState({ ingredients: ingredients, totalPrice: price })\r\n    // }\r\n\r\n    checkoutCancel = () => {\r\n        this.props.history.goBack()\r\n    }\r\n    \r\n    checkoutContinue = () => {\r\n        this.props.history.push('/checkout/contact-data')\r\n        \r\n    }\r\n    \r\n    render () {\r\n        let summary = <Redirect to='/' />\r\n        if (this.props.ingrd) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ingrd}\r\n                        checkoutCancel={this.checkoutCancel} \r\n                        checkoutContinue={this.checkoutContinue} \r\n                        />\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'} \r\n                        render={() => (\r\n                            <ContactData  \r\n                                ingredients={this.props.ingrd}\r\n                                totalPrice={this.props.totalPrice} \r\n                                {...this.props}\r\n                                />)\r\n                            }\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n     return (\r\n        <div>\r\n            {summary}\r\n        </div>\r\n    )\r\n }\r\n}\r\n\r\nconst mapStateToPorops = state => {\r\n    return {\r\n        ingrd: state.ingrd.ingredients,\r\n        totalPrice: state.ingrd.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPorops) (Checkout)","import React from 'react'\r\n\r\nimport classes from './Order.css'\r\n\r\nconst Order = (props) => {\r\n    const ingredients = []\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{ \r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid black',\r\n                padding: '0 15px'\r\n                }}\r\n            key={ig.name}> {ig.name} <strong> {ig.amount} </strong></span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: </p>\r\n            {ingredientOutput}\r\n            <p>Price: <strong> ${props.price.toFixed(2)} </strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n   \r\n    componentDidMount() {\r\n        this.props.onFetchOrders()\r\n    }\r\n    render () {\r\n        let orders = <Spinner />\r\n        if ( !this.props.loading ) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps ) (withErrorHandler(Orders, axios))","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\n\nimport './App.css';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders'\nclass App extends Component {\n\n  render () {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/orders' component={Orders} />\n            <Route path='/' exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility/utility' \r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n    return updateObject(state, {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\r\n    })\r\n}\r\nconst addIngredients = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedState)\r\n}\r\n\r\nconst fetchIngredients = (state, action) => {\r\n    return updateObject(state, { error: true })\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredients(state, action)\r\n        case actionTypes.DEL_INGREDIENT: return removeIngredients(state, action)\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredients(state, action)\r\n        default: return state\r\n    }\r\n    // return state\r\n}\r\n\r\nconsole.log('holla', reducer)\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility/utility'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, { purchased: false })\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, { loading: true })\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, { id: action.orderId.name })\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            })\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, { loading: false })\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: \r\n            return updateObject(state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            })\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject(state, { loading: false })\r\n        case actionTypes.FETCH_ORDERS_START: \r\n            return updateObject(state, { loading: true })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default orderReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilder from './store/reducers/burgerBuilder';\nimport order from './store/reducers/order'\n\nconst rootReducer = combineReducers({\n   ingrd: burgerBuilder,\n   order: order\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n   applyMiddleware(thunk)\n))\n\nconst app = (\n   <Provider store={store}>\n      <BrowserRouter>\n         <App />\n      </BrowserRouter>\n   </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}