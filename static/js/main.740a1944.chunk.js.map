{"version":3,"sources":["hoc/Auxiliary.js","components/Logo/Logo.js","components/UI/Navigation/NavigationItem/NavigationItem.js","components/UI/Navigation/NavigationItems/NavigationItems.js","components/UI/Navigation/MenuItem/MenuItem.js","components/UI/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/UI/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","hoc/withErrorHandler.js","components/UI/Spinner/Spinner.js","axios-orders.js","store/actions/actionTypes.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utility/utility.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/sagas/auth.js","store/sagas/index.js","index.js","components/UI/Navigation/Toolbar/Toolbar.css","components/Burger/BurgerIngredient/BurgerIngredient.css","components/UI/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/UI/Navigation/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/UI/Navigation/NavigationItems/NavigationItems.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css","App.css"],"names":["aux","props","children","Logo","className","classes","src","burgerLogo","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuth","MenuItem","onClick","open","Toolbar","DesktopOnlyToolbar","this","BurgerMenuHover","BurgerMenu","DesktopOnly","Component","Backdrop","show","clicked","SideDrawer","attachedClasses","Close","Open","closed","join","Layout","state","showSideDrawer","sideDrawerToggleHandler","setState","prevState","Content","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","elm","concat","length","BuildControl","label","More","added","Less","remove","disabled","disabledInfo","controls","BuildControls","price","toFixed","ctrl","addIngredient","removeIngredient","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","totalPrice","purchaseCancelled","purchaseContinued","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","Spinner","loader","inst","create","baseURL","AUTH_USER","AUTH_CHECK_TIMEOUT","AUTH_INIT_LOGOUT","AUTH_LOGOUT","authStart","authSuccess","userId","idToken","authFail","checkAuthTimeout","expirationTime","actionTypes","authLogout","authRedirectPath","path","BurgerBuilder","purchasing","updatePurchaseState","acc","cur","addIngredientHandler","removeIngredientHandler","purchaseHandler","console","log","onAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onPurchaseInit","onInitIngredients","ingrd","orderSummary","burger","onIngredientAdded","onIngredientRemoved","loading","order","dispatch","igType","ingredientName","get","then","resp","data","catch","actions","CheckoutSummary","width","height","margin","checkoutCancel","checkoutContinue","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","el","displayValue","Label","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","ContactData","orderForm","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","orderKey","orderData","onPurchaseBurgerStart","inputChangedHandler","inputId","updatedFormEl","target","updatedForm","formElementsArray","id","config","form","onSubmit","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","contactDataActions","Checkout","goBack","summary","purchasedRedirect","purchased","match","render","Order","amount","ingredientOutput","ig","display","border","padding","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","control","password","isSignup","switchSingup","controlName","updatedControls","submitHandler","buildingBurger","errorMessage","authRedirect","building","Logout","onLogout","App","routes","component","Boolean","window","location","hostname","initialState","INGREDIENTS_PRICES","salad","cheese","meat","bacon","removeIngredients","action","updatedIng","updatedIngs","addIngredients","updatedIngredient","updatedState","fetchIngredients","setIngredients","reducer","orderReducer","newOrder","authLogoutSaga","checkAuthTimeoutSaga","authSaga","localStorage","removeItem","put","delay","authData","returnSecureToken","url","Date","getTime","expiresIn","expirationDate","setItem","localId","watchAuth","takeEvery","rootReducer","combineReducers","burgerBuilder","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.740a1944.chunk.js","sourcesContent":["const aux = (props) => props.children\r\n\r\nexport default aux","import React from 'react'\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.css'\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt='myBurger' />\r\n    </div>\r\n)\r\n\r\nexport default Logo","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport classes from './NavigationItem.css'\r\n\r\nconst NavigationItem = (props) => (\r\n      <li className={classes.NavigationItem}>\r\n          <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n      </li>\r\n  \r\n)\r\n\r\nexport default NavigationItem","import React from 'react'\r\n\r\nimport classes from './NavigationItems.css'\r\nimport NavigationItem from '../NavigationItem/NavigationItem'\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/burger_builder'>Burger Builder</NavigationItem> \r\n        {props.isAuth ? <NavigationItem link='/orders'>Orders</NavigationItem> : null}\r\n            {props.isAuth \r\n                ? <NavigationItem link='/logout'>Log Out</NavigationItem> \r\n                : <NavigationItem link='/auth'>Log In</NavigationItem>\r\n            }\r\n    </ul>\r\n)\r\n\r\nexport default NavigationItems","import React from 'react'\r\n\r\nconst MenuItem = (props) => (\r\n  <div onClick={props.open}>\r\n      {props.children}\r\n  </div>\r\n)\r\n\r\nexport default MenuItem","import React, { Component } from 'react'\r\n\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport MenuItem from '../MenuItem/MenuItem'\r\n\r\nclass Toolbar extends Component {\r\n    render() {\r\n        return (\r\n            <header className={classes.Toolbar}>\r\n                <nav className={classes.DesktopOnlyToolbar}>\r\n                    <MenuItem open={this.props.open}>\r\n                        <div className={classes.BurgerMenuHover}>\r\n                            <div className={classes.BurgerMenu}></div>\r\n                            <div className={classes.BurgerMenu}></div>\r\n                            <div className={classes.BurgerMenu}></div>\r\n                        </div>\r\n                    </MenuItem>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                </nav>\r\n                <nav className={classes.DesktopOnly}>\r\n                    <NavigationItems isAuth={this.props.isAuth}/>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Toolbar","import React from 'react'\r\n\r\nimport classes from './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div \r\n                    className={classes.Backdrop}\r\n                    onClick={props.clicked}\r\n                    ></div> : null   \r\n)\r\n\r\nexport default Backdrop","import React from 'react'\r\n\r\nimport Logo from '../../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.css'\r\nimport Backdrop from '../../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../../hoc/Auxiliary'\r\n\r\nconst SideDrawer = (props) => {\r\n  \r\n    let attachedClasses = [classes.SideDrawer, classes.Close]\r\n    if(props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n  \r\n  return (\r\n      <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses.join(' ')}>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuth={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n      </Aux>\r\n  )\r\n}\r\n\r\nexport default SideDrawer","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxiliary'\r\nimport classes from './Layout.css'\r\nimport Toolbar from '../UI/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../UI/Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( prevState => ({\r\n            showSideDrawer: !prevState.showSideDrawer }))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                    isAuth={this.props.isAuth}\r\n                    open={this.sideDrawerToggleHandler}/>\r\n                \r\n                <SideDrawer \r\n                    isAuth={this.props.isAuth}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerToggleHandler}/>\r\n                <main className={ classes.Content } >\r\n                    { this.props.children }\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token !== null\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nimport classes from './BurgerIngredient.css';\r\n// import BurgerBuilder from '../../../containers/BurgerBuilder/BurgerBuilder';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n    \r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={ classes.BreadBottom }></div>;\r\n                break;\r\n            case ('bread-top'): \r\n                ingredient = (\r\n                    <div className={ classes.BreadTop }>\r\n                        <div className={ classes.Seeds1 }></div>\r\n                        <div className={ classes.Seeds2 }></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={ classes.Meat }></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={ classes.Cheese }></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={ classes.Salad }></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={ classes.Bacon }></div>;\r\n                break;\r\n            default: \r\n                ingredient = null;\r\n        }\r\n        \r\n        return ingredient\r\n    }\r\n}\r\n\r\n// BurgerBuilder.propTypes = {\r\n//     type: PropTypes.string.isRequired\r\n// }\r\n\r\nexport default BurgerIngredient","import React from 'react'\r\n// import { withRouter } from 'react-router-dom'\r\n\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            })\r\n        })\r\n        .reduce((arr, elm) => {\r\n            return arr.concat(elm)\r\n        }, [])\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please choose some ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger","import React from 'react'\r\n\r\nimport classes from './BuildControl.css'\r\n\r\nconst bla = () => {\r\n    return 4\r\n}\r\n\r\nbla()\r\n\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.label}> {props.label} </div>\r\n        <button className={classes.More} onClick={props.added} >More</button>\r\n        <button className={classes.Less} onClick={props.remove} disabled={props.disabledInfo}>Less</button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControl","import React from 'react'\r\n\r\nimport classes from './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Meat', type: 'meat' }\r\n]\r\n\r\nconst BuildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current price: ${props.price.toFixed(2)}</p>\r\n        {controls.map(ctrl => {\r\n            return <BuildControl\r\n                key={ctrl.label}\r\n            label={ctrl.label}\r\n                added={() => props.addIngredient(ctrl.type)}\r\n                remove={() => props.removeIngredient(ctrl.type)}\r\n                disabledInfo={props.disabledInfo[ctrl.type]}\r\n            />\r\n        }\r\n        )}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}\r\n        >{props.isAuth ? 'ORDER NOW' : 'SIGN IN TO ORDER'}\r\n        </button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControls","import React, { Component } from 'react'\r\n\r\nimport classes from './Modal.css'\r\nimport Aux from './../../../hoc/Auxiliary'\r\nimport Backdrop from './../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n    componentWillUpdate () {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                    <div \r\n                    className={ classes.Modal }\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                        {this.props.children} \r\n                    </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\n\r\nimport classes from './Button.css'\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n            >{ props.children }</button>\r\n)\r\n\r\nexport default Button","import React from 'react'\r\n\r\nimport Aux from './../../../hoc/Auxiliary'\r\nimport Button from './../../UI/Button/Button'\r\n\r\nconst OrderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return <li key={igKey} ><span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {props.ingredients[igKey]} </li>\r\n        })\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p>Total price is: ${props.totalPrice.toFixed(2)}</p>\r\n            <p>Continue to checkout?</p>\r\n            <Button\r\n                btnType='Danger'\r\n                clicked={props.purchaseCancelled}\r\n            >CANCEL</Button>\r\n            <Button\r\n                btnType='Success'\r\n                clicked={props.purchaseContinued}\r\n            >CONTINUE</Button>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default OrderSummary","import React, { Component } from 'react'\r\n\r\nimport Modal from '../components/UI/Modal/Modal'\r\nimport Aux from './Auxiliary'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        \r\n        state = {\r\n            error: null\r\n        }\r\n        \r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null })\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error })\r\n            })\r\n        }\r\n        componentWillUnmount () {\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render () {\r\n            return ( \r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                        >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n  \r\n\r\nexport default withErrorHandler","import React from 'react'\r\n\r\nimport classes from './Spinner.css'\r\n\r\nconst Spinner = (props) => (\r\n  <div className={classes.loader}>\r\n      {/* Loading... */}\r\n  </div>\r\n)\r\n\r\nexport default Spinner","import axios from 'axios'\r\n\r\nconst inst = axios.create({\r\n    baseURL: 'https://react-burger-builder-mcgs.firebaseio.com/'\r\n})\r\n\r\nexport default inst","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const DEL_INGREDIENT = 'DEL_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\r\n\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_USER = 'AUTH_USER'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT'\r\nexport const AUTH_INIT_LOGOUT = 'AUTH_INIT_LOGOUT'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(resp => {\r\n                dispatch(purchaseBurgerSuccess(resp.data, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const bla = () => {\r\n    return {\r\n        foo: false\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = []\r\n                // eslint-disable-next-line no-unused-vars\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import axios from 'axios'\r\n\r\nimport * as actionTypes from './actionTypes'\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    } \r\n}\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    } \r\n}\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    } \r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return {\r\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\r\n        expirationTime: expirationTime\r\n    }\r\n}\r\n\r\nexport const authLogout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_INIT_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return {\r\n        type: actionTypes.AUTH_USER,\r\n        email: email,\r\n        password: password,\r\n        isSignup: isSignup\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Aux from '../../hoc/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from './../../components/UI/Modal/Modal'\r\nimport OrderSummary from './../../components/Burger/OrderSummary/OrderSummary'\r\nimport withErrorHandler from '../../hoc/withErrorHandler'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport * as actions from '../../store/actions/index'\r\nimport axios from '../../axios-orders'\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n    }\r\n\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((acc, cur) => {\r\n                return acc + cur\r\n            }, 0)\r\n        return sum > 0\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        // const oldIngredCount = this.state.ingredients[type]\r\n        // const ingredCount = oldIngredCount + 1\r\n        // const updatedIngredients = {...this.state.ingredients}\r\n        // updatedIngredients[type] = ingredCount\r\n        // const priceAddition = INGREDIENTS_PRICES[type]\r\n        // const newTotalPrice = this.state.totalPrice + priceAddition\r\n        // this.setState({ \r\n        //     ingredients: updatedIngredients, \r\n        //     totalPrice: newTotalPrice\r\n        // })\r\n        // this.updatePurchaseState(updatedIngredients)\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        // const oldIngredCount = this.state.ingredients[type]\r\n        // const ingredCount = oldIngredCount - 1\r\n        // const updatedIngredients = { ...this.state.ingredients }\r\n\r\n        // if(oldIngredCount !== 0){\r\n        //     updatedIngredients[type] = ingredCount\r\n        // } \r\n        // const priceDiff = INGREDIENTS_PRICES[type]\r\n        // const newTotalPrice = this.state.totalPrice - priceDiff\r\n        // this.setState({\r\n        //     ingredients: updatedIngredients,\r\n        //     totalPrice: newTotalPrice\r\n        // })\r\n        // this.updatePurchaseState(updatedIngredients)\r\n\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuth) {\r\n            this.setState({ purchasing: true })\r\n        } else {\r\n            console.log('purchaseHandler')\r\n            this.props.onAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth')\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert('Please continue...')\r\n\r\n        this.props.onPurchaseInit()\r\n        this.props.history.push('/checkout')\r\n        // const queryParams = []\r\n        // for (let i in this.state.ingredients) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice)\r\n        // const queryString = queryParams.join('&')\r\n\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryString\r\n        // })\r\n    }\r\n    render() {\r\n\r\n        const disabledInfo = { ...this.props.ingrd }\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\r\n        if (this.props.ingrd) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ingrd} />\r\n                    <BuildControls\r\n                        addIngredient={this.props.onIngredientAdded}\r\n                        removeIngredient={this.props.onIngredientRemoved}\r\n                        disabledInfo={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ingrd)}\r\n                        price={this.props.totalPrice}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuth}\r\n                    />\r\n                </Aux>\r\n            )\r\n            orderSummary = (\r\n                <OrderSummary\r\n                    ingredients={this.props.ingrd}\r\n                    totalPrice={this.props.totalPrice}\r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}\r\n                />\r\n            )\r\n        }\r\n        if (this.props.loading) {\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingrd: state.ingrd.ingredients,\r\n        totalPrice: state.ingrd.totalPrice,\r\n        error: state.ingrd.error,\r\n        loading: state.order.loading,\r\n        isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (igType) => dispatch(actions.addIngredient(igType)),\r\n        onIngredientRemoved: (igType) => dispatch(actions.removeIngredient(igType)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onPurchaseInit: () => dispatch(actions.purchaseInit()),\r\n        onAuthRedirectPath: (path) => dispatch(actions.authRedirectPath(path))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))","import axios from '../../axios-orders'\r\n\r\nimport * as actionTypes from '../actions/actionTypes'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.DEL_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-builder-mcgs.firebaseio.com/ingredients.json')\r\n            .then(resp => {\r\n                dispatch(setIngredients(resp.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed(error))\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.css'\r\n\r\nconst CheckoutSummary = (props) => (\r\n  <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{width: '100%', height: '450px', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients}/>\r\n      </div>\r\n      <Button btnType='Danger' clicked={props.checkoutCancel}>Cancel</Button>\r\n      <Button btnType='Success' clicked={props.checkoutContinue}>Continue</Button>\r\n  </div>\r\n)\r\n\r\nexport default CheckoutSummary","import React from 'react'\r\n\r\nimport classes from './Input.css'\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null\r\n    const inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break\r\n        case ('select'):\r\n            inputElement = <select \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                    {props.elementConfig.options.map(el => (\r\n                        <option key={el.value} value={el.value} >{el.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            break\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n            break\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Input","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n    return isValid\r\n}","import React, { Component } from 'react'\r\nimport axios from '../../../axios-orders'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactData.css'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport * as contactDataActions from '../../../store/actions/index'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler'\r\nimport { updateObject, checkValidity } from '../../../shared/utility/utility'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' },\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: true\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault()\r\n        this.setState({ loading: true })\r\n        const formData = {}\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let orderKey in this.state.orderForm) {\r\n            formData[orderKey] = this.state.orderForm[orderKey].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingrd,\r\n            price: this.props.totalPrice.toFixed(2),\r\n            deliveryMethod: 'fastest',\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onPurchaseBurgerStart(order, this.props.token)\r\n        // axios.post('/orders.json', order)\r\n        //     .then(response => {\r\n        //         this.setState({ loading: false })\r\n        //         this.props.history.push('/')\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({ loading: false })\r\n        //     })\r\n    }\r\n\r\n    inputChangedHandler = (event, inputId) => {\r\n        const updatedFormEl = updateObject(this.state.orderForm[inputId], {\r\n            value: event.target.value,\r\n            valid: checkValidity(event.target.value, this.state.orderForm[inputId].validation),\r\n            touched: true\r\n        })\r\n        const updatedForm = updateObject(this.state.orderForm, {\r\n            [inputId]: updatedFormEl\r\n        })\r\n\r\n        let formIsValid = true;\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let inputId in updatedForm) {\r\n            formIsValid = updatedForm[inputId].valid && formIsValid\r\n        }\r\n\r\n        this.setState({ orderForm: updatedForm, formIsValid: formIsValid })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = []\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(elm => {\r\n                    return <Input\r\n                        key={elm.id}\r\n                        elementType={elm.config.elementType}\r\n                        elementConfig={elm.config.elementConfig}\r\n                        value={elm.config.value}\r\n                        invalid={!elm.config.valid}\r\n                        shouldValidate={elm.config.validation}\r\n                        touched={elm.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, elm.id)}\r\n                    />\r\n                })}\r\n\r\n                <Button btnType='Success' disabled={!this.state.formIsValid} >ORDER</Button>\r\n            </form>\r\n        )\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToPorops = state => {\r\n    return {\r\n        ingrd: state.ingrd.ingredients,\r\n        totalPrice: state.ingrd.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPurchaseBurgerStart: (orderData, token) => dispatch(contactDataActions.purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPorops, mapDispatchToProps)(withErrorHandler(ContactData, axios))","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from '../Checkout/ContactData/ContactData'\r\n\r\nclass Checkout extends Component {\r\n    // state = {\r\n    //     ingredients: {\r\n    //         salad: 1,\r\n    //         bacon:1,\r\n    //         cheese: 1,\r\n    //         meat: 1\r\n    //     },\r\n    //     totalPrice: null\r\n    // }\r\n\r\n    // componentWillMount () {\r\n    //     const query = new URLSearchParams(this.props.location.search)\r\n    //     const ingredients = {}\r\n    //     let price = 0 \r\n    //     for (let param of query.entries()) {\r\n    //             if (param[0] === 'price') {\r\n    //                 price = param[1]\r\n    //             } else {\r\n    //                 ingredients[param[0]] = +param[1]\r\n    //             }\r\n    //         }\r\n    //     this.setState({ ingredients: ingredients, totalPrice: price })\r\n    // }\r\n\r\n    checkoutCancel = () => {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    checkoutContinue = () => {\r\n        this.props.history.push('/checkout/contact-data')\r\n\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to='/' />\r\n        if (this.props.ingrd) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/burger_builder' /> : null\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ingrd}\r\n                        checkoutCancel={this.checkoutCancel}\r\n                        checkoutContinue={this.checkoutContinue}\r\n                    />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        render={() => (\r\n                            <ContactData\r\n                                ingredients={this.props.ingrd}\r\n                                totalPrice={this.props.totalPrice}\r\n                                {...this.props}\r\n                            />)\r\n                        }\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {summary}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToPorops = state => {\r\n    return {\r\n        ingrd: state.ingrd.ingredients,\r\n        totalPrice: state.ingrd.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPorops)(Checkout)","import React from 'react'\r\n\r\nimport classes from './Order.css'\r\n\r\nconst Order = (props) => {\r\n    const ingredients = []\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{ \r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid black',\r\n                padding: '0 15px'\r\n                }}\r\n            key={ig.name}> {ig.name} <strong> {ig.amount} </strong></span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: </p>\r\n            {ingredientOutput}\r\n            <p>Price: <strong> ${props.price.toFixed(2)} </strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n    }\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport classes from './Auth.css'\r\nimport * as actionTypes from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport { updateObject, checkValidity } from '../../shared/utility/utility'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        control: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.buildingBurger, this.props.authRedirectPath)\r\n        console.log('[Auth] not loaded')\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/burger_builder') {\r\n            console.log('[Auth] loaded')\r\n            this.props.onAuthRedirectPath()\r\n        }\r\n    }\r\n\r\n\r\n    // orderHandler = (event) => {\r\n    //     event.preventDefault()\r\n    //     this.setState({ loading: true })\r\n    //     const formData = {}\r\n    //     // eslint-disable-next-line no-unused-vars\r\n    //     for (let orderKey in this.state.orderForm) {\r\n    //         formData[orderKey] = this.state.orderForm[orderKey].value\r\n    //     }\r\n    //     const order = {\r\n    //         ingredients: this.props.ingrd,\r\n    //         price: this.props.totalPrice.toFixed(2),\r\n    //         deliveryMethod: 'fastest',\r\n    //         orderData: formData\r\n    //     }\r\n\r\n    //     this.props.onPurchaseBurgerStart(order)\r\n    //     // axios.post('/orders.json', order)\r\n    //     //     .then(response => {\r\n    //     //         this.setState({ loading: false })\r\n    //     //         this.props.history.push('/')\r\n    //     //     })\r\n    //     //     .catch(error => {\r\n    //     //         this.setState({ loading: false })\r\n    //     //     })\r\n    // }\r\n\r\n    switchSingup = () => {\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup }\r\n        })\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = updateObject(this.state.control, {\r\n            [controlName]: updateObject(this.state.control[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.control[controlName].validation),\r\n                touched: true\r\n            })\r\n        })\r\n\r\n        let formIsValid = true\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let ctrl in updatedControls) {\r\n            formIsValid = updatedControls[ctrl].valid && formIsValid\r\n        }\r\n        // console.log(this.state.formIsValid)\r\n        this.setState({ control: updatedControls, formIsValid: formIsValid })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n        this.props.onSubmit(this.state.control.email.value, this.state.control.password.value, this.state.isSignup)\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = []\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let key in this.state.control) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.control[key]\r\n            })\r\n        }\r\n\r\n        let form = (formElementsArray.map(elm => {\r\n            return <Input\r\n                key={elm.id}\r\n                elementType={elm.config.elementType}\r\n                elementConfig={elm.config.elementConfig}\r\n                value={elm.config.value}\r\n                invalid={!elm.config.valid}\r\n                shouldValidate={elm.config.validation}\r\n                touched={elm.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, elm.id)}\r\n            />\r\n        }))\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null\r\n        if (this.props.isAuth) {\r\n            console.log('here')\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button\r\n                        btnType='Success'\r\n                        disabled={!this.state.formIsValid} >SUBMIT</Button>\r\n                </form>\r\n                <Button\r\n                    btnType='Danger'\r\n                    clicked={this.switchSingup}\r\n                >SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuth: state.auth.token !== null,\r\n        buildingBurger: state.ingrd.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmit: (email, password, isSignup) => dispatch(actionTypes.auth(email, password, isSignup)),\r\n        onAuthRedirectPath: () => dispatch(actionTypes.authRedirectPath('/checkout'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount () {\r\n        this.props.onLogout()\r\n    }\r\n render () {\r\n     return <Redirect to='/burger_builder' />\r\n }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.authLogout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (Logout)","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport './App.css';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Logout/Logout'\n\nclass App extends Component {\n\n  render () {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/burger_builder' exact component={BurgerBuilder} />\n        <Redirect to='/burger_builder' />\n      </Switch>\n    )\n\n    if (this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route path='/checkout' component={Checkout} />\n          <Route path='/orders' component={Orders} />\n          <Route path='/auth' component={Auth} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/burger_builder' exact component={BurgerBuilder} />\n        </Switch>\n      )\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility/utility' \r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n}\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n    return updateObject(state, {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName],\r\n        building: true\r\n    })\r\n}\r\nconst addIngredients = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState)\r\n}\r\n\r\nconst fetchIngredients = (state, action) => {\r\n    return updateObject(state, { error: true })\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredients(state, action)\r\n        case actionTypes.DEL_INGREDIENT: return removeIngredients(state, action)\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredients(state, action)\r\n        default: return state\r\n    }\r\n    // return state\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility/utility'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, { purchased: false })\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, { loading: true })\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, { id: action.orderId.name })\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            })\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, { loading: false })\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: \r\n            return updateObject(state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            })\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject(state, { loading: false })\r\n        case actionTypes.FETCH_ORDERS_START: \r\n            return updateObject(state, { loading: true })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default orderReducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility/utility'\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/burger_builder'\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true })\r\n}\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null, \r\n        loading: false })\r\n}\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, { error: action.error, loading: false })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    })\r\n}\r\n\r\nconst authRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action)\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return authRedirectPath(state, action)\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { put, delay } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport * as actions from '../actions/index'\r\nimport * as actionTypes from '../actions/actionTypes'\r\n\r\nexport function* authLogoutSaga(action) {\r\n    yield localStorage.removeItem('token')\r\n    yield localStorage.removeItem('expirationDate')\r\n    yield localStorage.removeItem('userId')\r\n    yield put({\r\n        type: actionTypes.AUTH_LOGOUT\r\n    })\r\n}\r\n\r\nexport function* checkAuthTimeoutSaga(action) {\r\n    yield delay(action.expirationTime * 1000)\r\n    yield put(actions.authLogout())\r\n}\r\n\r\nexport function* authSaga(action) {\r\n    console.log(action)\r\n    yield put(actions.authStart())\r\n    const authData = {\r\n        email: action.email,\r\n        password: action.password,\r\n        returnSecureToken: true\r\n    }\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC_bdcM7oCCAbL__UHW3sIJQf3lO91636I'\r\n    if (!action.isSignup) {\r\n        url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC_bdcM7oCCAbL__UHW3sIJQf3lO91636I'\r\n    }\r\n\r\n    try {\r\n        const response = yield axios.post(url, authData)\r\n        console.log(response)\r\n        // yield put(response)\r\n        const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n        yield localStorage.setItem('token', response.data.idToken)\r\n        yield localStorage.setItem('expirationDate', expirationDate)\r\n        yield put(actions.authSuccess(response.data.idToken, response.data.localId))\r\n        yield put(actions.checkAuthTimeout(response.data.expiresIn))\r\n    } catch (error) {\r\n        yield put(actions.authFail(error.response.data.error))\r\n\r\n    }\r\n}\r\n","import { takeEvery } from 'redux-saga/effects'\r\n\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport { authLogoutSaga, checkAuthTimeoutSaga, authSaga } from './auth'\r\n\r\nexport function* watchAuth() {\r\n    yield takeEvery(actionTypes.AUTH_INIT_LOGOUT, authLogoutSaga)\r\n    yield takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga)\r\n    yield takeEvery(actionTypes.AUTH_USER, authSaga)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilder from './store/reducers/burgerBuilder';\nimport order from './store/reducers/order'\nimport auth from './store/reducers/auth'\nimport { watchAuth } from './store/sagas/index'\n\nconst rootReducer = combineReducers({\n   ingrd: burgerBuilder,\n   order: order,\n   auth: auth\n})\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n   applyMiddleware(thunk, sagaMiddleware)\n))\n\nsagaMiddleware.run(watchAuth)\n\nconst app = (\n   <Provider store={store}>\n      <BrowserRouter>\n         <App />\n      </BrowserRouter>\n   </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2272E\",\"Logo\":\"Toolbar__Logo__3SGCu\",\"BurgerMenu\":\"Toolbar__BurgerMenu__3YXpN\",\"DesktopOnly\":\"Toolbar__DesktopOnly__1dART\",\"BurgerMenuHover\":\"Toolbar__BurgerMenuHover__2m63J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__2Xta_\",\"Open\":\"SideDrawer__Open__Ks1nk\",\"Close\":\"SideDrawer__Close__2VS9Q\",\"Logo\":\"SideDrawer__Logo__y1d4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__feEaU\",\"active\":\"NavigationItem__active__2tNM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__PB14G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner__loader__UBmsk\",\"load1\":\"Spinner__load1__3Y-9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__2YUr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\",\"App-logo\":\"App__App-logo__3JCPt\",\"App-logo-spin\":\"App__App-logo-spin__RvI1J\",\"App-header\":\"App__App-header__3iH8L\",\"App-link\":\"App__App-link__13fTZ\"};"],"sourceRoot":""}